# map映射，主要用来做跨域
map $http_origin $other_domain_example {
    default       http://admin.dev1.example.com;
    "~http://admin.dev2.example.cn"       http://admin.dev2.example.cn;
}

# https 配置
server
{
    listen 443;
    ssl on;
    ssl_certificate /etc/letsencrypt/live/adminapi.dev1.example.cn/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/adminapi.dev1.example.cn/privkey.pem;
    server_name adminapi.dev1.example.cn;
    index index.html index.htm index.php default.html default.htm default.php;
    root  /opt/www/adminapi.dev1.example.cn/public/adminapi;

    include staticfile.conf;
    location / {
        # 跨域配置
        add_header 'Access-Control-Allow-Origin' $other_domain_example;
        add_header 'Access-Control-Allow-Credentials' 'true';
        try_files $uri $uri/ /index.php?_url=$uri&$args;
    }

    location ~ \.php$ {
        # 跨域配置
        add_header 'Access-Control-Allow-Origin' $other_domain_example;
        add_header 'Access-Control-Allow-Credentials' 'true';

        fastcgi_pass   127.0.0.1:9000;
        fastcgi_index  index.php;
        fastcgi_param SCRIPT_FILENAME   $document_root$fastcgi_script_name;
        include fastcgi_params;
    }

    location ~ /\.ht {
        deny all;
    }

    access_log  /opt/logs/api.dev1.example.cn.log  main;
}

server
{
    listen       80;
    server_name www.example.com example.com ;
    index index.html index.htm index.php default.html default.htm default.php;
    root  /home/wwwroot/example.com;

    # http to https redirect
    # return 301 https://$host$request_uri;

    if ($host = 'example.com' ) {
        rewrite  ^/(.*)$  http://www.example.com/$1  permanent;
    }

    include wordpress.conf;
    include phpfastcgi.conf;
    include staticfile.conf;

    location ~ /\.ht {
        deny all;
    }

    access_log  /home/wwwlogs/example.com.log  main;
}
