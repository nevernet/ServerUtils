[mysql]
#no-auto-rehash

[mysqld_safe]
#malloc-lib=tcmalloc

[mysqldump]
single-transaction

[mysqld]
# basic settings #
default-authentication-plugin = mysql_native_password # 启用老版本的密码验证，保证兼容第三方组件和老的5.x的客户端连接
user = mysql
sql_mode = "STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION,NO_ZERO_DATE,NO_ZERO_IN_DATE,ERROR_FOR_DIVISION_BY_ZERO,ONLY_FULL_GROUP_BY"
autocommit = 1
server-id = 63006
character_set_server=utf8mb4
#MGR使用乐观锁,所以官网建议隔离级别是RC,减少锁粒度
transaction_isolation = READ-COMMITTED
explicit_defaults_for_timestamp = 1
max_allowed_packet = 64M
event_scheduler = 1
default-storage-engine=INNODB

#basedir=/var/lib/mysql
# socket=/var/lib/mysql/mysql.sock
datadir=/opt/mysql/data
#lc-messages-dir=/usr/share/mysql/

# log-error=/var/log/mysqld.log
pid-file=/var/run/mysqld/mysqld.pid

bind-address=0.0.0.0
port=3306

# Disabling symbolic-links is recommended to prevent assorted security risks
symbolic-links=0

skip-name-resolve

# connection #
interactive_timeout = 1800 # 一个持续SLEEP状态的线程多久被关闭。线程每次被使用都会被唤醒为activity状态，执行完Query后成为interactive状态，重新开始计时。
wait_timeout = 1800 #  同上，wait_timeout不同在于只作用于TCP/IP和Socket链接的线程，意义是一样的。
lock_wait_timeout = 1800
skip_name_resolve = 1
max_connections = 1024
max_user_connections = 256
max_connect_errors = 1000000 #设置最大连接错误
connect_timeout=60  #单位秒， 只在登录连接时有效，避免网络不好，重连数太多，一般默认即可。

# table cache performance settings
table_open_cache = 2000
table_definition_cache = 4096
table_open_cache_instances = 16 # 表缓存用来存放目前已打开表的列表，当每一个表打开或关闭互斥体就被锁定 – 即使这是一个隐式临时表。使用多个分区绝对减少了潜在的争用。

# session memory settings #
read_buffer_size = 4M
read_rnd_buffer_size = 8M
sort_buffer_size = 8M
tmp_table_size = 16M #临时表大小，如果超过该值，则结果放到磁盘中
max_heap_table_size = 64M #该变量设置MEMORY (HEAP)表可以增长到的最大空间大小
join_buffer_size = 64M
thread_cache_size = 64 #cache中保留多少线程用于重用


# log settings #
log_error = /opt/mysql/log/error.log
log_bin = /opt/mysql/log/binlog
log_error_verbosity = 2
general_log_file = /opt/mysql/log/general.log
slow_query_log = 1
slow_query_log_file = /opt/mysql/log/slow_query_log/slow.log
log_queries_not_using_indexes = 1 # 将所有没有使用带索引的查询语句全部写到慢查询日志中
log_slow_admin_statements = 1
log_slow_slave_statements = 1
log_throttle_queries_not_using_indexes = 10 #每分钟记录到slow log的未使用索引的SQL语句次数，防止slow log日志过大
binlog_expire_logs_seconds = 86400

binlog_cache_size = 4M
max_binlog_cache_size = 128M
max_binlog_size = 256M

long_query_time = 2
min_examined_row_limit = 100
log-bin-trust-function-creators = 1
#因为集群会在故障恢复时互相检查binlog的数据,
#所以需要记录下集群内其他服务器发过来已经执行过的binlog,按GTID来区分是否执行过.
log-slave-updates = 1


# innodb settings #
innodb_page_size = 16384
innodb_buffer_pool_size = 128M # 如果是独立服务器,该参数尽可能的大,物理内存的70-80% . 如16G内存可以设置12G， 否则设置成10%内存
innodb_buffer_pool_instances = 1 # Buffer_Pool分成8个缓冲池，每个pool需要大于1G
innodb_buffer_pool_load_at_startup = 1
innodb_buffer_pool_dump_at_shutdown = 1
innodb_lru_scan_depth = 4096
innodb_lock_wait_timeout = 5 #InnoDB 有其内置的死锁检测机制
innodb_io_capacity = 800 #告诉MySQL系统每秒能处理IO次数，IO性能高时，可以调高
innodb_io_capacity_max = 20000
innodb_flush_method = O_DIRECT #控制Innodb的IO行为
#innodb_undo_tablespaces = 3
innodb_flush_neighbors = 0
innodb_log_file_size = 50M
innodb_log_files_in_group = 2 #日志组中的日志文件数目
#innodb_data_home_dir=/opt/mysql/innodb_file/ #InnoDB表的目录共用设置
innodb_data_file_path=ibdata1:100M:autoextend  #单独指定数据文件的路径与大小
#innodb_log_group_home_dir=/opt/mysql/innodb_file/ #指定innodb自己的日志文件保存路径
innodb_log_buffer_size = 16M # 该参数16M是比较好的选择
innodb_purge_threads = 4 #回收日志线程和主线程分开
innodb_purge_batch_size=300            #每次处理删除脏页的数量
innodb_thread_concurrency = 4 # 进入内核线程数：<=CPU数量*磁盘数量*2  过高的值可能导致线程的互斥颠簸
innodb_print_all_deadlocks = 1
innodb_strict_mode = 1
innodb_sort_buffer_size = 8M
innodb_write_io_threads = 8
innodb_read_io_threads = 8
innodb_file_per_table = 1
innodb_stats_persistent_sample_pages = 64
innodb_autoinc_lock_mode = 2
innodb_online_alter_log_max_size=1G
innodb_open_files=4096

# replication settings #
master_info_repository = TABLE
relay_log_info_repository = TABLE
sync_binlog = 1 # sync_binlog 将事务实时同步到磁盘,为保证事务安全,可设置为1
gtid_mode = on
enforce_gtid_consistency = 1
binlog_format = ROW
binlog_rows_query_log_events = 1
relay_log = /opt/mysql/log/relay_log/relay.log
relay_log_recovery = 1
slave_skip_errors = ddl_exist_errors
# slave-rows-search-algorithms = 'INDEX_SCAN,HASH_SCAN'

# semi sync replication settings #
plugin-load-add = "group_replication.so;semisync_master.so;semisync_slave.so"
#loose_rpl_semi_sync_master_enabled = 1
#loose_rpl_semi_sync_master_timeout = 3000
#loose_rpl_semi_sync_slave_enabled = 1

# password plugin #
#validate_password_policy = STRONG
#validate-password = FORCE_PLUS_PERMANENT

# perforamnce_schema settings
# performance-schema-instrument='memory/%=COUNTED'
# performance_schema_digests_size = 40000
# performance_schema_max_table_instances = 40000
# performance_schema_max_sql_text_length = 4096
# performance_schema_max_digest_length = 4096


# new replication settings #
slave-parallel-type = LOGICAL_CLOCK #基于组提交的并行复制方式
slave-parallel-workers = 16 #并行的SQL线程数量
slave_preserve_commit_order = 1
slave_transaction_retries = 128
# other change settings #
binlog_gtid_simple_recovery = 1
log_timestamps = system

# group replication settings
# plugin-load-add = "group_replication.so;semisync_master.so;semisync_slave.so"
transaction_write_set_extraction = XXHASH64
report_host = '10.0.20.100' # optional for group replication, local machine ip address
binlog_checksum = NONE # only for group replication
loose_group_replication = FORCE_PLUS_PERMANENT
loose_group_replication_group_name = "7f5100de-26a4-11e8-b467-0ed5f89f718b" # 真实机器修改这里配置
loose_group_replication_compression_threshold = 100
loose_group_replication_flow_control_mode = 0
loose_group_replication_single_primary_mode = 1 # 单主模式
loose_group_replication_enforce_update_everywhere_checks = 0 # 单主的时候要关闭
loose_group_replication_transaction_size_limit = 10485760
loose_group_replication_unreachable_majority_timeout = 120
loose-group_replication_ip_whitelist = '127.0.0.1/8,10.0.20.0/24' # 真实机器修改这里配置
loose-group_replication_start_on_boot = OFF
loose-group_replication_bootstrap_group = OFF
loose-group_replication_local_address = '10.0.20.100:33406' # 真实机器修改这里配置
loose-group_replication_group_seeds = '10.0.20.100:33406,10.0.20.101:33407' # 真实机器修改这里配置
